// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path=".snaplet/snaplet.d.ts" />
// This config was generated by Snaplet make sure to check it over before using it.
import { copycat } from "@snaplet/copycat";
import type { SnapletClient } from "snaplet";
import { defineConfig } from "snaplet";

import { hashPassword } from "@calcom/features/auth/lib/hashPassword.ts";

copycat.setHashKey("zXBAR+MWoTUaO94S");

type ChildInputs<T extends keyof SnapletClient> = Parameters<SnapletClient[T]>[0];

export default defineConfig({
  generate: {
    alias: {
      inflection: true,
    },
    async run(snaplet) {
      const eventTypes: ChildInputs<"EventType"> = [
        {
          title: "30min",
          slug: "30min",
          length: 30,
          hidden: true,
        },
        {
          title: "60min",
          slug: "60min",
          length: 30,
        },
      ];

      const users: ChildInputs<"users"> = [
        // {
        //   email: "delete-me",
        //   name: "delete-me",
        //   password: await hashPassword("delete-me"),
        //   username: "delete-me",
        //   completedOnboarding: true,
        //   // snaplet generates a dateString in this case.
        //   avatar: null,
        //   // because they have completed onboarding, they will have a schedule
        //   Schedule: (c) => c(1, () => ({ name: "Working Hours" })),
        // },
        // {
        //   email: "onboarding@example.com",
        //   password: await hashPassword("onboarding"),
        //   username: "onboarding",
        //   name: "onboarding",
        //   avatar: null,
        //   completedOnboarding: false,
        // },
        {
          email: "free-first-hidden@example.com",
          password: await hashPassword("free-first-hidden"),
          username: "free-first-hidden",
          name: "Free First Hidden Example",
          avatar: null,
          // attach the eventTypes to the user
          // ...
        },
      ];

      await snaplet.users(users);
    },
  },
});
